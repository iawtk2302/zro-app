default_platform(:android)

# Hàm cập nhật build.gradle
def update_gradle_file(file_path, version_code)
  gradle_content = File.read(file_path)
  gradle_content.gsub!(/versionCode\s+\d+/, "versionCode #{version_code}")
  gradle_content.gsub!(/versionName\s+\".*\"/, "versionName \"#{Time.now.strftime('%Y.%m.%d')}\"")
  File.write(file_path, gradle_content)
end

def update_pubspec_file(file_path, version_name, version_code)
  content = File.read(file_path)

  # Tìm và cập nhật dòng chứa `version:`
  updated_content = content.gsub(
    /^version: .*/,
    "version: #{version_name}+#{version_code}" 
  )

  File.write(file_path, updated_content)
end

platform :android do
  # Lane để build và phân phối app
  lane :beta do
    # Lấy thời gian hiện tại
    current_time = Time.now
    current_date = current_time.strftime("%Y%m%d")
    build_number_file = "build_number.txt"
    build_number_today = 1

    # Tải cache build_number.txt từ GitHub Actions nếu có
    cache_file = cache_get("build_number_cache")

    if cache_file && cache_file.include?("#{current_date}")
      saved_date, saved_build_number = cache_file.split
      build_number_today = saved_build_number.to_i + 1
      puts "Updated build number: #{build_number_today}"
    else
      puts "New day detected. Resetting build number."
      build_number_today = 1 # Reset số lần build nếu ngày thay đổi
    end

    # Ghi lại số lần build mới vào cache của GitHub Actions
    cache_put("build_number_cache", "#{current_date} #{build_number_today}")

    # Cập nhật versionCode
    version_code = current_time.strftime("%y%m%d").to_i * 100 + build_number_today
    version_name = "1.0.0"

    # Cập nhật version trong pubspec.yaml
    pubspec_path = "../../pubspec.yaml"
    update_pubspec_file(pubspec_path, version_name, version_code)

    # Cập nhật versionCode và versionName trong build.gradle
    gradle_file_path = "../app/build.gradle"
    update_gradle_file(gradle_file_path, version_code)

    release_notes = "Release for version: #{version_name}+#{version_code}"

    # Build APK
    sh "flutter build apk --release"

    # Phân phối đến Firebase App Distribution
    firebase_app_distribution(
      app: ENV["FIREBASE_APP_ID"],
      service_credentials_json_data: ENV["FIREBASE_CREDENTIALS_JSON"],
      apk_path: "../build/app/outputs/flutter-apk/app-release.apk",
      groups: "testers",
      release_notes: release_notes
    )
  end
end
